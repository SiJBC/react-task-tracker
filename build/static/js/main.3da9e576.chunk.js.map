{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3da9e576.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Button = ( {color, text, onClick}) => {\n\n    // const onClick = (e) => {\n    //         console.log(e)\n    // }\n    return (\n        <button onClick = {onClick} \n        style = {{backgroundColor: color}} className = 'btn'>{text}\n        </button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func\n}\n\nexport default Button\n","import PropTypes from 'prop-types';\nimport Button from './Button' \n\nconst Header = ({title, onAdd, showAdd}) => {\n\n\n    return (\n        <header className ='header'>\n            <h1> {title}</h1>\n            <Button \n            color = {showAdd ? 'red': 'green'} \n            text = {showAdd ? 'Close' : 'Add'} \n            onClick = {onAdd}/>\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker'\n  }\n\n  Header.propTypes = {\n      title: PropTypes.string.isRequired,\n  }\n\n//   css in javascript\n\n  const headingSytle = {\n    color: 'red', \n    backgroundColor: 'black'\n  }\n\nexport default Header\n","import React from 'react'\nimport { FaTimes} from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle}) => {\n    return (\n        <div className ={`task ${task.reminder ? 'reminder' : ''}`} \n        onDoubleClick ={() => onToggle(task.id)}>\n            <h3>{task.text} \n            <FaTimes style = {{color: 'red', cursor: 'pointer'}}\n            onClick ={ () => onDelete(task.id)}/></h3>\n            <p>{task.day}</p>\n\n        </div>\n    )\n}\n\nexport default Task","\nimport Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <>\n      {tasks.map((task, index) => (\n        <Task key={index} task={task} onDelete={onDelete} onToggle={onToggle} />\n      ))}\n    </>\n  )\n}\n\nexport default Tasks\n\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState('')\n  const [day, setDay] = useState('')\n  const [reminder, setReminder] = useState(false)\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n\n    if (!text) {\n      alert('Please add a task')\n      return\n    }\n\n    onAdd({ text, day, reminder })\n\n    setText('')\n    setDay('')\n    setReminder(false)\n  }\n\n  return (\n    <form className='add-form' onSubmit={onSubmit}>\n      <div className='form-control'>\n        <label>Task</label>\n        <input\n          type='text'\n          placeholder='Add Task'\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className='form-control'>\n        <label>Day & Time</label>\n        <input\n          type='text'\n          placeholder='Add Day & Time'\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n      <div className='form-control form-control-check'>\n        <label>Set Reminder</label>\n        <input\n          type='checkbox'\n          checked={reminder}\n          value={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n\n      <input type='submit' value='Save Task' className='btn btn-block' />\n    </form>\n  )\n}\n\nexport default AddTask","\nimport { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([\n    // {\n    //     id: 1,\n    //     text: 'Doctors Appointment',\n    //     day: 'Feb 5th at 2:30pm',\n    //     reminder: true\n    // },\n    // {\n    //     id: 2,\n    //     text: 'Meeting at school',\n    //     day: 'Feb 6th at 1:30pm',\n    //     reminder: true,\n    // },\n    // {\n    //     id: 3,\n    //     text: 'Food Shopping',\n    //     day: 'Feb 5th at 2:30pm',\n    //     reminder: false\n    // }      \n])\n\n// Add task\n\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000 + 1)\n  const newTask = {id, ...task}\n  setTasks([...tasks, newTask])\n}\n\n// delete task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))  \n}\n\n// toggle reminder\nconst toggleReminder = (id) => {\n  setTasks(tasks.map(\n    (task) => task.id === id ? \n    {...task, reminder : !task.reminder} \n    : task))\n}\n\n\n  return (\n    <div className=\"container\">\n     <Header \n     onAdd={() => setShowAddTask(!showAddTask)} \n     showAdd ={showAddTask}\n     /> \n    {showAddTask && <AddTask onAdd ={addTask}/>} \n     {tasks.length > 0 ? ( <Tasks tasks = {tasks} \n     onToggle={toggleReminder}\n     onDelete = {deleteTask}/>): ('No Tasks to show') }\n    \n     \n    </div>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}